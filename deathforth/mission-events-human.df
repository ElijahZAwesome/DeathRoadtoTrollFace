
mission{

// : random-death-phrase

// pick from list
0 stack
	"BARF!" shove
	"OH, DANG" shove
	"DANG IT!" shove
	"C... CANADA" shove
	"noooooo" shove
	"oh poop" shove
	"uh wait... aaaaa" shove
	"dangummit" shove
	"argh" shove
	"woops" shove
	"I regret nothing!" shove
	"I regret everything!" shove
	"Tell Tim Horton I..." shove
	"aaaaaaaaa!" shove
	"This is everyone's fault but me!" shove
	"Real mature, zombies! REAL mature!" shove
	"aaaaa!" shove
	"heeeelp!" shove
	"Catch you on the flip side" shove
	"This dude is biting me!" shove
	"Argh!" shove
	"Well... could be worse" shove
	"I knew this would happen!" shove
	"Oh uh... woops!" shove
	"Ow! Ow!!" shove
	"Hey... cut it out" shove
	"I hope I don't turn into a skeleton" shove
	"Please don't throw my skeleton around" shove
	"If only I threw more chairs..." shove
	"consarnit" shove
	"dagnabbit" shove
	"Fine! This is fine!" shove
	"Aaaaargh!" shove
	"Whatever!" shove
	"Who needs Canada, anyway?" shove
	"No!" shove
	"Caaaaaaaaaaaaaaaaarl!" shove
	"Ouch!" shove
	"Wait, I think I dropped my gum!" shove
	"Time out! Time out!" shove
	"Wait, that one didn't count!" shove
	"Wait! I get a do-over!" shove
	"This is all YOUR fault!" shove
	"Uh... I meant to do that!" shove
	"This is aaaaall part of the plan, heh" shove
	"Tell everyone my last words were cool!" shove
	"Cheaters! You zombies cheated!" shove
	"Save me, Rosdower!" shove
	"saaave meeeeeee" shove
	"Uhhh... little help?" shove
	"halp" shove
	"heeelp meeeee" shove
	"Don't worry, I have a plan!" shove
	"Ow ow ow ow ow" shove
	"No one touch any of my stuff!" shove
	"Bury me... with my food cans!" shove
	"Bury me with my beloved car keys!" shove
	"Bury me with a sweet headstone!" shove
	"Oh well! Better luck next time." shove
	"That was close! Oh wait, ow!" shove
	"I got a problem, here." shove
	"That stings!" shove
	"Ha! That tickles!" shove
	"Bring it on!!!" shove
	"WOOOooooooouch!" shove
	"No problem! I got this!" shove
	"Argh! Run for it!" shove
	"This was a bad idea!" shove
	"Wait! I got something in my eye!" shove
	"I'm fine. I'll walk it off!" shove
	"Just got the wind knocked outta me." shove
	"Heh, this is nothing! I've had worse!" shove
	"I can still do this! One second!" shove
	"What-ever!" shove
	"*rolling eyes at zombies in disgust*" shove
	"Excuse me... stop eating me please" shove
	"Hey! Bad zombie! Bad!" shove
	"Slow zombies aren't supposed to be dangerous!" shove
	"eeeeep" shove
	"shrieeeeeeek" shove
	"*g...gulp*" shove
	"I'm in for it now!" shove
	"I've had it now!" shove
	"This is it for me!" shove
	"No fair!" shove
	"No way!" shove
	"Either these zombies go... or I do!" shove
	"gurk" shove
	"owowowowow" shove
	"ugh!" shove
	"OOF!" shove
	"For cripes sake..." shove
	"Ow my spleen" shove
	"I hope that's just ketchup" shove
	"Well I'll be a monkey's uncle. I'm dead!" shove
	"KAKAROOOOT!!" shove
	"Zombie spit, gross" shove
var death-saying-stack

// shuffles pops nip
// ;

: random-death-phrase death-saying-stack rndpicks nip ;

: .death-saying args( thing ) random-death-phrase <- thing statmod{ .yellmsglong } ;

: death-handler args( chara )
	<- chara .char-droploot

	60 %chance if
		<- chara .thing@ .death-saying
	else
		"BARF!" <- chara .thing@ statmod{ .yellmsglong }
	then
;

statmod{
: human-thing-events (* "HUMAN THING EVENT: " type .s cr *) 0 args( thing eventid chara )
	<- thing .character@ -> chara

	<- eventid
		THING_EVENT_DIED
		?(
			<- chara .name@ type " DIED!!!!" print
			<- chara death-handler
		);

		// Here you can set up anything on the human THING when it's created in a mission
		THING_EVENT_NEW
		?(
			// Change radius to smaller value here if you want

			5 <- thing .rad.x!

		);

		THING_EVENT_GOT_FATIGUED
		?(
			<- chara .tired? if <- chara MOD_TIRED #mod-icon$ <- thing .report then;
		);
;
}

last human-default-events!


// /////////////// //
// HUMAN AI ORDERS //
// /////////////// //

-1 value last-combat-order
-1 value last-tactic-order

: check-new-combat
	last-combat-order orders_combat@ dup ( last order order ) to last-combat-order ( last order ) <> ( true/false )
;

: check-new-tactic
	last-tactic-order orders_tactic@ dup to last-tactic-order <>
;

0 enum COMBAT_AUTO
enum COMBAT_MELEE
enum COMBAT_GUNS
drop

0 enum TACTIC_AUTO
enum TACTIC_FLEE
enum TACTIC_ATTACK
drop

: combat_report
	orders_combat@ case
		COMBAT_MELEE of
			"SMASHIN!"
		endof
		COMBAT_GUNS of 
			"SHOOTIN!"
		endof
		otherwise
			"EITHER"
		( COMBAT_AUTO )
	endcase
;

: tactic_report
	orders_tactic@ case
		TACTIC_FLEE of 
			"RUNNIN!"
		endof
		TACTIC_ATTACK of
			"FIGHTIN!"
		endof
		otherwise
			"DEFEND"
		( TACTIC_AUTO )
	endcase
;

: report-orders
	"COMBAT : " combat_report .. cr$ .. " TACTIC : " .. tactic_report ..
	180 view_w 0.5 * 8 msgtickxy2
;

: loyalty-space args( chara )
	<- chara .loyalty 4 > if
		20
	else
		<- chara .loyalty 2 < if
			40
		else
			30
		then
	then
;

: .char-update-tactic-ai args( chara )
	orders_tactic@ case
		TACTIC_FLEE of
			0 <- chara .ai.loot_chance!
			0.01 <- chara .ai.wander_chance! // Don't look around
			0	<- chara .ai.rush_chance!
			4	<- chara .ai.attack_level!
			<- chara loyalty-space 2 /  dup <- chara .ai.follow_leash! 8 + <- chara .ai.safety_leash!
			-1   <- chara .ai.pickup_gun_max!
			-1  <- chara .ai.pickup_melee_max!
		endof
		TACTIC_ATTACK of
			<- chara .composure 4 > if 0.5 else 1 then <- chara .ai.rush_chance!
			0	<- chara .ai.attack_level! 
			<- chara loyalty-space  <- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		endof
		otherwise
			<- chara .composure 2 < if 0.5 else 0 then	<- chara .ai.rush_chance!
			2	<- chara .ai.attack_level! 		
			<- chara loyalty-space	<- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		( TACTIC_AUTO )
	endcase
;

: .char-update-combat-ai args( chara )

	orders_combat@ case
		COMBAT_MELEE of
			0	<- chara .ai.threat_respond_chance!
			1	<- chara .ai.threat_threshold!
			1	<- chara .ai.threat_relax_chance!
		endof
		COMBAT_GUNS of 
			1	<- chara .ai.threat_respond_chance!
			0	<- chara .ai.threat_threshold!
			0	<- chara .ai.threat_relax_chance!
		endof
		otherwise
			1	<- chara .ai.threat_respond_chance!
			0.9	<- chara .ai.threat_threshold!
			0.8	<- chara .ai.threat_relax_chance!
		( COMBAT_AUTO )
	endcase
;

: update-team-combat-ai
	mission-team-stack depths for pops .char-update-combat-ai next drop
;

: update-team-tactic-ai
	mission-team-stack depths for pops .char-update-tactic-ai next drop
;

: .reset-ai
	dup .default-ai-setup 
	.thing@
		0 over .ai.threat_mode!
		0 over .ai.threat_time!
		0 over .ai.safety_time!
	drop
;

: refresh-team-ai

	mission-team-stack depths for pops .reset-ai next drop

	update-team-tactic-ai
	update-team-combat-ai
;

: change-team-orders
	sfx{ fm 1 fx .j! 0.5 fx .duty! 0.5 fx .scale! } // BLURBLURBLE
	refresh-team-ai report-orders
;

last to main-event-mission-orders

: clown-end-day
	road{ nearcanada-day 1 + road-trip-days - } 1 < if
		zombieclowns
	then
;

: zombies-setup
	zombiedefaults
	29 stpick if clown-end-day then
;

last to main-event-mission-setup


: mission-ai-config

	refresh-team-ai
;

last to main-event-mission-start


// CO-OP JOIN MESSAGE
: buddy-join args( chara hint )
	<- hint 1 = if RED TOGGLE .. FLICKER .. "BRING IT" .. <- chara .thing@ .report then;
	<- hint 0 = if BLUE TOGGLE .. "later gator" .. <- chara .thing@ .report then;
;

last to main-event-mission-character

}
